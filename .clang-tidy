Checks: >
        *,
        -abseil-*,
        -altera-*,
        -android-*,
        -boost-*,
        -bugprone-assignment-in-if-condition,
        -bugprone-branch-clone,
        -bugprone-casting-through-void,
        -bugprone-crtp-constructor-accessibility,
        -bugprone-easily-swappable-parameters,
        -bugprone-empty-catch,
        -bugprone-exception-escape,
        -bugprone-forwarding-reference-overload,
        -bugprone-implicit-widening-of-multiplication-result,
        -bugprone-inc-dec-in-conditions,
        -bugprone-integer-division,
        -bugprone-macro-parentheses,
        -bugprone-move-forwarding-reference,
        -bugprone-multi-level-implicit-pointer-conversion,
        -bugprone-narrowing-conversions,
        -bugprone-not-null-terminated-result,
        -bugprone-reserved-identifier,
        -bugprone-return-const-ref-from-parameter,
        -bugprone-sizeof-expression,
        -bugprone-suspicious-include,
        -bugprone-suspicious-string-compare,
        -bugprone-suspicious-stringview-data-usage,
        -bugprone-switch-missing-default-case,
        -bugprone-unchecked-optional-access,
        -bugprone-unused-raii,
        -bugprone-unused-return-value,
        -bugprone-use-after-move,
        # -cert-dcl21-cpp,
        -cert-dcl37-c,
        -cert-dcl51-cpp,
        -cert-dcl58-cpp,
        -cert-err33-c,
        -cert-err34-c,
        -cert-err58-cpp,
        -cert-flp30-c,
        -cert-int09-c,
        -cert-msc32-c,
        -cert-msc51-cpp,
        -cert-oop54-cpp,
        -clang-analyzer-core.CallAndMessage,
        -clang-analyzer-core.NullDereference,
        -clang-analyzer-core.uninitialized.Assign,
        -clang-analyzer-core.UndefinedBinaryOperatorResult,
        -clang-analyzer-deadcode.DeadStores,
        -clang-analyzer-optin.core.EnumCastOutOfRange,
        -clang-analyzer-osx.*,
        -clang-analyzer-security.FloatLoopCounter,
        -clang-analyzer-webkit.*,
        -concurrency-mt-unsafe,
        -cppcoreguidelines-avoid-c-arrays,
        -cppcoreguidelines-c-copy-assignment-signature,
        -cppcoreguidelines-avoid-const-or-ref-data-members,
        -cppcoreguidelines-avoid-do-while,
        -cppcoreguidelines-avoid-goto,
        -cppcoreguidelines-avoid-magic-numbers,
        -cppcoreguidelines-avoid-non-const-global-variables,
        -cppcoreguidelines-explicit-virtual-functions,
        -cppcoreguidelines-init-variables,
        -cppcoreguidelines-macro-to-enum,
        -cppcoreguidelines-macro-usage,
        -cppcoreguidelines-misleading-capture-default-by-value,
        -cppcoreguidelines-missing-std-forward,
        -cppcoreguidelines-narrowing-conversions,
        -cppcoreguidelines-noexcept-move-operations,
        -cppcoreguidelines-non-private-member-variables-in-classes,
        -cppcoreguidelines-owning-memory,
        -cppcoreguidelines-prefer-member-initializer,
        -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
        -cppcoreguidelines-pro-bounds-constant-array-index,
        -cppcoreguidelines-pro-bounds-pointer-arithmetic,
        -cppcoreguidelines-pro-type-const-cast,
        -cppcoreguidelines-pro-type-cstyle-cast,
        -cppcoreguidelines-pro-type-member-init,
        -cppcoreguidelines-pro-type-reinterpret-cast,
        -cppcoreguidelines-pro-type-static-cast-downcast,
        -cppcoreguidelines-pro-type-union-access,
        -cppcoreguidelines-pro-type-vararg,
        -cppcoreguidelines-rvalue-reference-param-not-moved,
        -cppcoreguidelines-slicing,
        -cppcoreguidelines-special-member-functions,
        -cppcoreguidelines-use-default-member-init,
        -darwin-*,
        -fuchsia-*,
        -google-build-using-namespace,
        -google-explicit-constructor,
        -google-objc-*,
        -google-readability-avoid-underscore-in-googletest-name,
        -google-readability-braces-around-statements,
        -google-readability-casting,
        -google-readability-namespace-comments,
        -google-readability-todo,
        -google-runtime-int,
        -google-upgrade-googletest-case,
        -hicpp-avoid-c-arrays,
        -hicpp-avoid-goto,
        -hicpp-braces-around-statements,
        -hicpp-deprecated-headers,
        -hicpp-explicit-conversions,
        -hicpp-invalid-access-moved,
        -hicpp-member-init,
        -hicpp-move-const-arg,
        -hicpp-multiway-paths-covered,
        -hicpp-named-parameter,
        -hicpp-no-array-decay,
        -hicpp-no-assembler,
        -hicpp-noexcept-move,
        -hicpp-use-override,
        -hicpp-signed-bitwise,
        -hicpp-special-member-functions,
        -hicpp-uppercase-literal-suffix,
        -hicpp-use-auto,
        -hicpp-use-emplace,
        -hicpp-use-equals-default,
        -hicpp-use-equals-delete,
        -hicpp-vararg,
        -llvm-*,
        -llvmlibc-*,
        -misc-confusable-identifiers,
        -misc-const-correctness,
        -misc-coroutine-hostile-raii,
        -misc-include-cleaner,
        -misc-no-recursion,
        -misc-non-private-member-variables-in-classes,
        -misc-redundant-expression,
        -misc-unconventional-assign-operator,
        -misc-unused-parameters,
        -misc-use-anonymous-namespace,
        -misc-use-internal-linkage,
        -modernize-avoid-bind,
        -modernize-avoid-c-arrays,
        -modernize-concat-nested-namespaces,
        -modernize-deprecated-headers,
        -modernize-loop-convert,
        -modernize-macro-to-enum,
        -modernize-make-unique,
        -modernize-pass-by-value,
        -modernize-raw-string-literal,
        -modernize-replace-random-shuffle,
        -modernize-return-braced-init-list,
        -modernize-type-traits,
        -modernize-unary-static-assert,
        -modernize-use-auto,
        -modernize-use-bool-literals,
        -modernize-use-constraints,
        -modernize-use-default-member-init,
        -modernize-use-designated-initializers,
        -modernize-use-emplace,
        -modernize-use-equals-default,
        -modernize-use-equals-delete,
        -modernize-use-nodiscard,
        -modernize-use-override,
        -modernize-use-ranges,
        -modernize-use-std-numbers,
        -modernize-use-std-print,
        -modernize-use-trailing-return-type,
        -modernize-use-using,
        -mpi-*,
        -objc-*,
        -openmp-*,
        -performance-avoid-endl,
        -performance-enum-size,
        -performance-faster-string-find,
        -performance-for-range-copy,
        -performance-inefficient-string-concatenation,
        -performance-inefficient-vector-operation,
        -performance-move-const-arg,
        -performance-no-int-to-ptr,
        -performance-noexcept-move-constructor,
        -performance-unnecessary-value-param,
        -portability-*,
        -readability-avoid-const-params-in-decls,
        -readability-avoid-nested-conditional-operator,
        -readability-avoid-return-with-void-value,
        -readability-avoid-unconditional-preprocessor-if,
        -readability-braces-around-statements,
        -readability-const-return-type,
        -readability-container-data-pointer,
        -readability-container-size-empty,
        -readability-convert-member-functions-to-static,
        -readability-else-after-return,
        -readability-enum-initial-value,
        -readability-function-cognitive-complexity,
        -readability-function-size,
        -readability-identifier-length,
        -readability-identifier-naming,
        -readability-implicit-bool-conversion,
        -readability-inconsistent-declaration-parameter-name,
        -readability-isolate-declaration,
        -readability-magic-numbers,
        -readability-make-member-function-const,
        -readability-math-missing-parentheses,
        -readability-misleading-indentation,
        -readability-named-parameter,
        -readability-qualified-auto,
        -readability-redundant-access-specifiers,
        -readability-redundant-casting,
        -readability-redundant-inline-specifier,
        -readability-redundant-member-init,
        -readability-simplify-boolean-expr,
        -readability-simplify-subscript-expr,
        -readability-static-accessed-through-instance,
        -readability-suspicious-call-argument,
        -readability-uppercase-literal-suffix,
        -readability-use-anyofallof,
        -readability-use-std-min-max,
        -zircon-*
CheckOptions:
  - key: readability-operators-representation.BinaryOperators
    value: "&&;&=;&;|;~;!;!=;||;|=;^;^="
  - key: readability-operators-representation.OverloadedOperators
    value: "&&;&=;&;|;~;!;!=;||;|=;^;^="
WarningsAsErrors: ''
HeaderFilterRegex: '^./*'
FormatStyle: none
UseColor: true
